{"version":3,"sources":["Components/MainBoard/helpers.js","Containers/Homepage/TEMP_DATA_SETS.js","Containers/Homepage/useTaskManagerHook.js","Containers/Homepage/BoardContext.js","Components/MainBoard/AddTask.js","Components/MainBoard/TaskList/index.js","Components/Modals/BasicModal/index.js","Components/Inputs/DefaultInput.js","Components/MainBoard/ModalTaskContent.js","Components/MainBoard/index.js","Containers/Homepage/index.js","Pages/Homepage/index.js","App.js","reportWebVitals.js","index.js","Components/Modals/BasicModal/styles.module.scss","Components/MainBoard/ModalTaskContent.module.scss","Components/MainBoard/TaskList/TaskList.module.scss"],"names":["h__handleDragOver","e","preventDefault","h__handleDragStart","parentId","dataTransfer","setData","JSON","stringify","id","target","DUMMY_BOARD_LIST","title","DUMMY_TASK_LIST","label","isCompleted","lsKey","h__serializeListData","reduce","a","b","push","h__attachTaskToBoard","data","parentToTaskMap","forEach","val","tasksList","existingData","localStorage","getItem","useBoardAndTaskManagerHook","useState","parse","allData","setAllData","handleUpdateList","newResp","setItem","handleAddTaskToBoard","uuidV4","Math","round","random","boardData","handleDrop","sourceParentId","targetParentId","taskId","taskIndex","findIndex","handleCreateBoard","length","handleTaskUpdate","handleDeleteTask","BoardContext","React","createContext","BoardContextProvider","children","Provider","value","AddTask","handleAdd","isCompletedListActive","className","onClick","isEqual","prev","current","Task","handleEditTask","handleTaskDragStart","handleCompleteStatus","draggable","onDragStart","type","checked","stopPropagation","onChange","TaskList","handleDragOver","showCompletedList","setShowCompletedList","completedList","inCompletedList","h__separateCompletedList","onDrop","onDragOver","map","i","s","completedListOpen","memo","BasicModal","onClose","open","ReactDOM","createPortal","modalWrapper","closeIcon","modalContentWrapper","modalTitle","document","getElementById","DefaultInput","forwardedRef","props","ref","ModalTaskContent","handleDelete","boardList","handleClose","inputRef","useRef","taskData","setTaskData","handleChange","updatedData","name","useEffect","focus","modalCtaWrapper","deleteCta","cta","primaryCta","disabled","MainBoard","selectedTask","setSelectedTask","boardListRef","currentBoardContext","useContext","h__drop","targetId","getData","sourceId","handleModalClose","HomePageContainer","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.77116e3c.chunk.js","sourcesContent":["export const h__handleDragOver = (e) => {\n  e.preventDefault();\n};\nexport const h__handleDragStart = (e, parentId) => {\n  e.dataTransfer.setData(\"dragEventData\", JSON.stringify({id: e.target.id, parentId: parentId}));\n};\n","export const DUMMY_BOARD_LIST = [\n    {\n        id: '9846d451-6558-44a8-b533-11345fa1a1L1',\n        title: 'List 1',\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1a1L2',\n        title: 'List 2',\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1a1L3',\n        title: 'List 3',\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1a1L4',\n        title: 'List 4',\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1a1L5',\n        title: 'List 5',\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1a1L6',\n        title: 'List 6',\n    },\n];\n\nexport const DUMMY_TASK_LIST = [\n    {\n        id: '9846d451-6558-44a8-b533-11345fa1L1C1',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L1',\n        label: 'Task 1 from list 1',\n        isCompleted: true\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1L1C2',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L1',\n        label: 'Task 2 from list 1'\n    }, {\n        id: '9846d451-6558-44a8-b533-11345fa1L1C3',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L1',\n        label: 'Task 3 from list 1'\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1L2C1',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L2',\n        label: 'Task 1 from list 2'\n    },{\n        id: '9846d451-6558-44a8-b533-11345fa1L3C1',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L3',\n        label: 'Task 1 from list 3'\n    },\n    {\n        id: '9846d451-6558-44a8-b533-11345fa1L4C1',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L4',\n        label: 'Task 1 from list 4'\n    },\n    {\n        id: '9846d451-6558-44a8-b533-11345fa1L5C1',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L5',\n        label: 'Task 1 from list 5'\n    }, {\n        id: '9846d451-6558-44a8-b533-11345fa1L6C1',\n        parentId: '9846d451-6558-44a8-b533-11345fa1a1L6',\n        label: 'Task 1 from list 6'\n    }\n]\n","import {v4 as uuidV4} from \"uuid\";\nimport {useState} from \"react\";\nimport {DUMMY_BOARD_LIST, DUMMY_TASK_LIST} from \"./TEMP_DATA_SETS\";\n\nconst lsKey = 'dummy_trello_processed_task';\n\nconst h__serializeListData = () => {\n    return (DUMMY_TASK_LIST.reduce((a, b) => {\n        const parentId = b.parentId;\n        a[parentId] = (a[parentId] || []);\n        a[parentId].push(b);\n        return a;\n    }, {}))\n};\n\nconst h__attachTaskToBoard = (data = []) => {\n    const parentToTaskMap = h__serializeListData();\n    data.forEach(val => {\n        val.tasksList = parentToTaskMap[val.id] || [];\n    })\n    return data;\n};\n\nconst existingData = localStorage.getItem(lsKey);\n\nconst useBoardAndTaskManagerHook = () => {\n    const [allData, setAllData] = useState(existingData ? JSON.parse(existingData) : h__attachTaskToBoard(DUMMY_BOARD_LIST));\n\n    const handleUpdateList = () => {\n        const newResp = h__attachTaskToBoard(DUMMY_BOARD_LIST);\n        localStorage.setItem(lsKey, JSON.stringify(newResp));\n        setAllData([...newResp]);\n    }\n\n    const handleDrop = (sourceParentId, targetParentId, taskId, isCompleted) => {\n        if (!sourceParentId || !targetParentId || !taskId) return;\n        const taskIndex = DUMMY_TASK_LIST.findIndex(val => val.id === taskId);\n        if (taskIndex < 0) return;\n        DUMMY_TASK_LIST[taskIndex] = {...DUMMY_TASK_LIST[taskIndex], parentId: targetParentId, isCompleted: isCompleted};\n        // DUMMY_TASK_LIST[taskIndex].parentId = targetParentId;\n        // DUMMY_TASK_LIST[taskIndex].isCompleted = isCompleted || false;\n        handleUpdateList();\n    }\n    const handleAddTaskToBoard = ({parentId, label = ''}) => {\n        if (!parentId) return;\n        DUMMY_TASK_LIST.push({\n            id: uuidV4(),\n            parentId: parentId,\n            label: label || `New Task ${Math.round(Math.random()*100)}`\n        });\n        handleUpdateList();\n    }\n    const handleCreateBoard = (title = '') => {\n        DUMMY_BOARD_LIST.push({\n            id: uuidV4(),\n            title: title || `List ${DUMMY_BOARD_LIST.length+1}`,\n        });\n        handleUpdateList();\n    }\n\n    const handleTaskUpdate = (data = {}) => {\n        if (!data?.id) {\n            handleAddTaskToBoard(data);\n            return\n        }\n        const taskIndex = DUMMY_TASK_LIST.findIndex(val => val.id === data.id);\n        if (taskIndex < 0) return;\n        DUMMY_TASK_LIST[taskIndex] = data;\n        handleUpdateList();\n    }\n\n    const handleDeleteTask = (id) => {\n        if (!id) {\n            return\n        }\n        const taskIndex = DUMMY_TASK_LIST.findIndex(val => val.id === id);\n        if (taskIndex < 0) return;\n        delete DUMMY_TASK_LIST[taskIndex];\n        handleUpdateList();\n    }\n    return ({\n        boardData: allData,\n        handleDrop,\n        handleAddTaskToBoard,\n        handleCreateBoard,\n        handleTaskUpdate,\n        handleDeleteTask\n    })\n}\n\nexport default useBoardAndTaskManagerHook;\n","import React from \"react\";\nimport useBoardAndTaskManagerHook from \"./useTaskManagerHook\";\n\nexport const BoardContext = React.createContext({});\n\nconst BoardContextProvider = ({children}) => {\n    const {\n        boardData: allData,\n        handleDrop,\n        handleAddTaskToBoard,\n        handleCreateBoard,\n        handleTaskUpdate,\n        handleDeleteTask\n    } = useBoardAndTaskManagerHook();\n    return (\n        <BoardContext.Provider value={{\n            boardData: allData,\n            handleDrop,\n            handleAddTaskToBoard,\n            handleCreateBoard,\n            handleTaskUpdate,\n            handleDeleteTask\n        }}>\n            {children}\n        </BoardContext.Provider>\n    )\n}\n\nexport default BoardContextProvider;\n","import React from \"react\";\n\nconst AddTask = ({handleAdd, isCompletedListActive}) => {\n    return (\n        <div className={`cta__add-task ${isCompletedListActive ? 'bottom-50' : ''}`} onClick={handleAdd}>\n            + Drag and drop /<br /> Add task\n        </div>\n    )\n}\n\nexport default AddTask;\n","import React, {useState} from \"react\";\nimport AddTask from \"../AddTask\";\nimport s from './TaskList.module.scss';\n\nconst isEqual = (prev, current) => {\n    return ((JSON.stringify(prev.tasksList) === JSON.stringify(current.tasksList)) && (prev.title === current.title) && (prev.isCompleted === current.isCompleted));\n}\n\nconst h__separateCompletedList = (data) => {\n    let completedList = [];\n    let inCompletedList = [];\n    data.forEach((val) => {\n        if (val.isCompleted) {\n            completedList.push(val);\n        } else {\n            inCompletedList.push(val);\n        }\n    });\n    return ({completedList, inCompletedList})\n}\n\nconst Task = ({data, parentId, handleEditTask, handleTaskDragStart, handleCompleteStatus}) => {\n    const {id: taskId, label = \"\", isCompleted} = data;\n    return (\n        <div\n            onClick={() => handleEditTask(data)}\n            id={taskId}\n            className={\"card\"}\n            draggable\n            onDragStart={e => handleTaskDragStart(e, parentId)}\n        >\n            <input title={`Mark ${isCompleted ? 'Incomplete' : 'Completed'}`} type=\"checkbox\" className={'cursor_pointer'} checked={isCompleted} onClick={e => e.stopPropagation()}\n                   onChange={e => handleCompleteStatus(e, {...data, isCompleted: !isCompleted})}/>{label}\n        </div>\n    )\n}\n\nconst TaskList = (\n    {id, title = \"\", tasksList = [], handleTaskUpdate, handleEditTask, handleDrop, handleDragOver, handleTaskDragStart}\n) => {\n    const [showCompletedList, setShowCompletedList] = useState(false);\n    const {completedList, inCompletedList} = h__separateCompletedList(tasksList)\n    const handleCompleteStatus = (e, data = {}) => {\n        e.stopPropagation();\n        handleTaskUpdate(data);\n    }\n    return (\n        <div className={'d-flex flex-column position-relative overflow-auto'}>\n            <div\n                id={id}\n                className=\"board-list position-relative\"\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n            >\n                <div className=\"list-title\"><span>{title}</span> <span className={'add-task'} title={'Add Task'}\n                                                                       onClick={() => handleEditTask({parentId: id})}>+</span>\n                </div>\n\n                {inCompletedList.map((data, i) => <Task key={data?.taskId || i} data={data} parentId={id} handleEditTask={handleEditTask}\n                                                     handleTaskDragStart={handleTaskDragStart}\n                                                     handleCompleteStatus={handleCompleteStatus}/>)}\n                {/*<div>*/}\n                <AddTask isCompletedListActive={!!completedList.length}\n                         handleAdd={() => handleEditTask({parentId: id})}/>\n                {/*</div>*/}\n            </div>\n            {completedList.length ?\n                <div\n                    onDrop={e => {\n                        e.stopPropagation();\n                        handleDrop(e, true);\n                    }}\n                    onDragOver={handleDragOver}\n                    className={`${s.completedList} ${showCompletedList ? s.completedListOpen : ''}`}>\n                    <div className={s.title} onClick={() => setShowCompletedList(!showCompletedList)}>\n                        <span>{showCompletedList ? \"Hide\" : \"Show\"} Completed List</span>\n                        <span>{showCompletedList ? 'v' : '^'}</span>\n                    </div>\n                    {showCompletedList ? <div>\n                        {completedList.map((data, i) => <Task key={data?.taskId || i} data={data} parentId={id} handleEditTask={handleEditTask}\n                                                           handleTaskDragStart={handleTaskDragStart}\n                                                           handleCompleteStatus={handleCompleteStatus}/>)}\n                    </div> : null}\n                </div> : null}\n\n        </div>\n    )\n}\n\nexport default React.memo(TaskList, isEqual);\n","import ReactDOM from \"react-dom\";\nimport s from \"./styles.module.scss\";\n\nconst BasicModal = ({onClose, open = false, children, title = ''}) => {\n    return (\n        open ? ReactDOM.createPortal(\n            <>\n            <div className={s.modalWrapper} onClick={onClose}>\n                {onClose && <span onClick={onClose} className={s.closeIcon}>+</span>}\n                <div onClick={e => e.stopPropagation()}>\n                    <div className={s.modalContentWrapper}>\n                        <div className={s.modalTitle}>{title ? title : ''}</div>\n                        {children}\n                    </div>\n                </div>\n            </div></>, document.getElementById(\"root\")\n        ) : null\n    )\n}\n\nexport default BasicModal;\n","\nconst DefaultInput = ({forwardedRef, ...props}) => {\n    return (\n        <input ref={forwardedRef} className={'global__basic-input-style'} {...props}/>\n    )\n}\n\nexport default DefaultInput;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport s from './ModalTaskContent.module.scss';\nimport DefaultInput from \"../Inputs/DefaultInput\";\n\nconst ModalTaskContent = ({data, handleDelete, boardList, handleClose, handleTaskUpdate}) => {\n    const inputRef = useRef();\n    const [taskData, setTaskData] = useState(data);\n    const {\n        label = \"\",\n        parentId,\n        id\n    } = taskData;\n    const handleChange = e => {\n        const updatedData = {...taskData};\n        updatedData[e.target.name] = e.target.value;\n        setTaskData(updatedData);\n    }\n\n    const handleSave = () => {\n        handleTaskUpdate(taskData);\n        handleClose();\n    }\n\n    useEffect(() => {\n        if (inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [inputRef])\n\n    return (<>\n        <div>\n            <div>Title:</div>\n            <DefaultInput forwardedRef={inputRef} onChange={handleChange} name={'label'} value={label}/>\n        </div>\n        <div className={'my-2'}>\n            <div>Board:</div>\n            <select className={'global__basic-input-style'} value={parentId} name={'parentId'} onChange={handleChange}>\n                {boardList.map((boardData) => {\n                    const {\n                        id,\n                        title = ''\n                    } = boardData || {};\n                    return (\n                        <option key={id} value={id}>{title}</option>\n                    )\n                })}\n            </select>\n        </div>\n        <div className={s.modalCtaWrapper}>\n            <div>\n                {id ? <button onClick={() => {\n                    handleDelete(id);\n                    handleClose();\n                }} className={s.deleteCta}>\n                    Delete\n                </button> : null}\n            </div>\n            <div>\n                <button onClick={handleClose} className={s.cta}>\n                    Cancel\n                </button>\n                <button onClick={handleSave} className={s.primaryCta} disabled={!label}>\n                    Save\n                </button>\n            </div>\n        </div>\n    </>)\n}\n\nexport default ModalTaskContent;\n","import React, {useContext, useRef, useState} from \"react\";\nimport \"./styles.css\";\nimport {h__handleDragOver, h__handleDragStart} from \"./helpers\";\nimport {BoardContext} from \"../../Containers/Homepage/BoardContext\";\nimport TaskList from \"./TaskList\";\nimport BasicModal from \"../Modals/BasicModal\";\nimport ModalTaskContent from \"./ModalTaskContent\";\n\nconst MainBoard = () => {\n    const [selectedTask, setSelectedTask] = useState({});\n    const boardListRef = useRef();\n\n    const currentBoardContext = useContext(BoardContext);\n    const {\n        boardData,\n        handleDrop,\n        handleCreateBoard,\n        handleTaskUpdate,\n        handleDeleteTask\n    } = currentBoardContext;\n\n    const h__drop = (e, targetId, isCompleted) => {\n        let taskData = e.dataTransfer.getData(\"dragEventData\");\n        targetId = targetId || e.target.id;\n        if (taskData && targetId) {\n            taskData = JSON.parse(taskData);\n            const {\n                id: taskId,\n                parentId: sourceId,\n            } = taskData || {};\n            handleDrop(sourceId, targetId, taskId, isCompleted);\n        }\n    }\n\n    // useEffect(() => {\n    // if (boardListRef) {\n    //     boardListRef.current.scrollTo(boardListRef.current.scrollWidth,0);\n    // }\n    // }, [boardData.length])\n\n    const handleModalClose = () => {\n        setSelectedTask({});\n    }\n\n    return (\n        <div className=\"board-layout\">\n            <div className={'action-area'}>\n                <button className={'primary-cta'} onClick={() => handleCreateBoard()}>+ Create Board</button>\n            </div>\n            <div id=\"boardlists\" ref={boardListRef} className=\"board-lists\">\n                {boardData.map((data = {}, i) => {\n                    return (\n                        <TaskList\n                            key={i}\n                            {...data}\n                            handleEditTask={setSelectedTask}\n                            handleDrop={(e, isCompleted) => h__drop(e, data.id, isCompleted)}\n                            handleDragOver={h__handleDragOver}\n                            handleTaskDragStart={h__handleDragStart}\n                            handleTaskUpdate={handleTaskUpdate}\n                        />\n                    )\n                })}\n            </div>\n            <BasicModal\n                open={!!selectedTask.parentId}\n                onClose={handleModalClose}\n                title={selectedTask.id ? 'Edit Task' : 'Create Task'}\n            >\n                <ModalTaskContent\n                    data={selectedTask}\n                    boardList={boardData}\n                    handleClose={handleModalClose}\n                    handleDelete={handleDeleteTask}\n                    handleTaskUpdate={handleTaskUpdate}\n                />\n            </BasicModal>\n        </div>\n    );\n};\n\nexport default MainBoard;\n","import React from \"react\";\nimport MainBoard from \"../../Components/MainBoard\";\nimport BoardContextProvider from \"./BoardContext\";\n\n\nconst HomePageContainer = () => {\n    return (\n        <BoardContextProvider>\n            <MainBoard/>\n        </BoardContextProvider>\n    );\n};\n\nexport default HomePageContainer;\n","import HomePageContainer from \"../../Containers/Homepage\"\n\nconst HomePage = () => {\n    return (<HomePageContainer />);\n}\n\nexport default HomePage;\n","import React from 'react';\nimport HomePage from './Pages/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContentWrapper\":\"styles_modalContentWrapper__Tsq2B\",\"modalTitle\":\"styles_modalTitle__zXVKQ\",\"modalWrapper\":\"styles_modalWrapper__HJqaG\",\"closeIcon\":\"styles_closeIcon__1z6VT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"ModalTaskContent_contentWrapper__2fAbo\",\"modalCtaWrapper\":\"ModalTaskContent_modalCtaWrapper__mIUIm\",\"cta\":\"ModalTaskContent_cta__1J9ng\",\"deleteCta\":\"ModalTaskContent_deleteCta__-nxeK\",\"primaryCta\":\"ModalTaskContent_primaryCta__235_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completedList\":\"TaskList_completedList__k-0dc\",\"completedListOpen\":\"TaskList_completedListOpen__1DzYy\",\"title\":\"TaskList_title__3Vxt7\"};"],"sourceRoot":""}